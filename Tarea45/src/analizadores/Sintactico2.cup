package analizadores;
import java.util.LinkedList;
import java_cup.runtime.*;
import tarea45.*;

parser code
{:
    public Nodo2 raiz;

    /**
    * Metodo para error sintactico
    **/
    public void syntax_error(Symbol s){
        System.err.println("Error sintacto l√≠nea " + (s.left+1) +" columna "+(s.right+1)+ ". No se esperaba " +s.value+"."); 
            tarea45.main.listaSintacticos.add(new ErrorLexico(String.valueOf(s.value), "Sintactico", Integer.toString(s.left +1), Integer.toString(s.right+1)));
        }
    
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.err.println("Error irrecuperable en la linea " + (s.left)+ " columna " +s.right+". Elemento " + s.value + " no reconocido.");
        
    }

:}

terminal String coma, par, impar;

non terminal Nodo2 S, LISTA;

start with S; 
S       ::=     LISTA:l{:raiz = l;:}
        ;

LISTA   ::=     LISTA:l coma par:p
                {:
                    l.pares += Integer.parseInt(p);
                    l.contadorPar++;
                    RESULT = l;
                :}
                | LISTA:l coma impar:p 
                {:
                    l.impares = l.impares * Integer.parseInt(p);
                    l.contadorImpar++;
                    RESULT = l;
                :}
                | par:p {:RESULT = new Nodo2(); RESULT.pares += Integer.parseInt(p); RESULT.contadorPar++;:}
                | impar:p {:RESULT = new Nodo2(); RESULT.impares = RESULT.impares * Integer.parseInt(p); RESULT.contadorImpar++;:}
        ;
